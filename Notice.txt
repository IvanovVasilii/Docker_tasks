1-е задание (скрипт по удалению упавших сервисов и volume)
Файлы: docker_cleaner.sh, cron_file

При написании скрипта сделаны допущения:
- Cron job со скриптом будет запущен на manager-e.  
(т.к. рекомендуется иметь нечетное количество manager-ов, то второй сервер 
скорее всего будет worker);
- Пользователь, от имени которого будет запускаться cron job со скриптом
включен в группу docker и может выполнять команды типа docker service ls без sudo;
- Оба сервера имеют пользователя, от имени которого будет запускаться cron job, 
если пользователь на втором сервере отличается, то необходимо в скрипте изменить переменную ssh_user;
- Настроена аутентификация на базе ключей SSH.

Краткий алгоритм работы скрипта:
1) Настройка логирования.
2) Отбор сервисов, которые в строке состояния docker service ls имеют  " 0/1 ".
3) Фильтруем сервисы, которые имеют название вида sandbox_ФАМИЛИЯ_2eИНИЦИАЛЫ.
4) Для каждого отфильтрованного сервиса проверяем, что он именно упал, а не запускается.
   (Current state не начинается с Preparing). С запускающимся сервисом ничего не делаем.
5) Упавший сервис удаляем. 
6) Если сервис выполнялся на текущей node, то удаляем соответствующий ему volume.
   Для сервиса запущеного на втором сервере, удаляем соответствующий ему volume по ssh. 
 
Cron file настроен для запуска скрипта раз в 3 минуты. Поскольку не было оговорено иного, то считаем, 
что скрипт должен запускаться в любой день и в любое время суток, раз в 3 минуты.
Логирование прописано в самом скрипте. Если бы этого не было, то логирование можно настроить в cron как
показано в закомментированной части.
 
2-е задание (Dockerfile для nginx)
Файлы: Dockerfile, nginx.conf, makefile
В качестве основы выбран дистрибутив Alpine, т.к. он легковесен и подходит для поставленной задачи.
Config файл nginx практически не изменен:
 - отключены virtual hosts;
 - добавленая секция server, где прописана страница Hello world.
makefile по умолчанию создает образ на основе Dockerfile и запускает контейнер, 80 порт контейнера пробрасывается
на порт 8080 host машины.
В makefile дополнительно добавлено несколько команд для управления образом и контейнерами, которые запускаются на базе
данного образа. 